// USL Class file for Editor, scripted by AyCe
//
// Usage: enter the locations in customs.txt
// Nice, eh? :P

class CSDKLocalizationMgr

	static var ^CSDKLocalizationMgr ms_pxInstance;
	var ^CPropDB.CNode m_pxData;

	export static proc ref CSDKLocalizationMgr Get()
		if(ms_pxInstance==null)then
			ms_pxInstance=new CSDKLocalizationMgr();
		endif;
		return ms_pxInstance^;
	endproc;
	
	export static proc void ShutStatic()
		delete ms_pxInstance;
	endproc;

	export constructor()
		var ^CPropDB pxData = new CPropDB;
		pxData^.Load(CClientWrap.GetUrsRelPath() + "/Data/leveled/Scripts/customs.txt");
		m_pxData = ^((pxData^).GetRoot());
	endconstructor;

	export proc void CustomQuestmarks(^CList p_pxToolTipList)
		var int iEntry=0;
		var bool bContinue=true;
		while(bContinue)do
			var string sQM = m_pxData^.Get("Questmarks")^.GetValueS("questmark_"+(iEntry+1).ToString());	
			if(sQM.IsEmpty())then
				bContinue=false;
			else
				p_pxToolTipList^.AddItem(sQM);
				iEntry++;
			endif;
		endwhile;
	endproc;
	export proc void CustomGameoverreasons(^CDropList p_pxReason, ^CList p_pxToolTipList)
		var int iEntry=0;
		var bool bContinue=true;
		while(bContinue)do
			var string sGOR = m_pxData^.Get("Gameoverreasons")^.GetValueS("gors_"+(iEntry+1).ToString());	
			if(sGOR.IsEmpty())then
				bContinue=false;
			else
				p_pxToolTipList^.AddItem(sGOR);
				p_pxReason^.AddItem(sGOR);
				iEntry++;
			endif;
		endwhile;
	endproc;
	export proc string GetHelper(string p_sCode)
		var string s_located = p_sCode;
		var string s_loc = m_pxData^.Get("Helpers")^.GetValueS(p_sCode);
		if (s_loc != "") then
			s_located = s_loc;
		endif;
		return s_located;
	endproc;
	export proc void Dump(string p_sDump)
		Dump("C:/sdkdump.txt", p_sDump);
	endproc;
	export proc void Dump(string p_sPath, string p_sDump)
		var Filesystem.CFile xFile;
		xFile.OpenWrite(p_sPath);
		xFile.Print(p_sDump);
		xFile.Close();
	endproc;
endclass;