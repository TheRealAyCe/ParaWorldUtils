class CViewQuestEditor inherit CEnhancedFrameWindow;

	var ^CRadioButton		m_pxMainQuestBtn;
	var ^CRadioButton		m_pxSubQuestBtn;
	var ^CEdit				m_pxNameEdit;
	var ^CEdit				m_pxGroupEdit;
	var ^CEdit				m_pxHeadlineEdit;
	var ^CEdit				m_pxQuestgroupEdit;
	var ^CEdit				m_pxDescriptionEdit;
	var ^CEdit				m_pxAdditionalInfoEdit;
	var ^CList				m_pxQuestList;
	var ^CButton			m_pxNewQuest;
	var ^CButton			m_pxDeleteQuest;
	var ^CButton			m_pxImageButton;
	var ^CButton			m_pxSortUp;
	var ^CButton			m_pxSortDown;
	var ^CButton			m_pxLock;
	
	var ^CGroupBox			m_pxBoniGroup;
	var ^CSpinCtrlNumber	m_pxBoniValueEasy;
	var ^CSpinCtrlNumber	m_pxBoniValueMiddle;
	var ^CSpinCtrlNumber	m_pxBoniValueHard;

	var ^CViewDelQuest		m_pxDelQuest;

	var int m_iLastQuest;
	var bool m_bLocked;

	export constructor()
		if(!InitFromResource("options/ViewQuestEditor","QuestEditor")) then
			CLevelEditorWrap.LogError("UI.QuestEditor","InitFromResource failed");
			return;
		endif;
		m_iLastQuest = -1;
		m_bLocked = false;

		m_pxMainQuestBtn=cast<CRadioButton>(GetControl("GroupBoxMain/MainQuest"));
		m_pxMainQuestBtn^.m_xOnChange=Update;
		m_pxMainQuestBtn^.SetTabStop(true);
		m_pxMainQuestBtn^.SetSelected(true);
		m_pxSubQuestBtn=cast<CRadioButton>(GetControl("GroupBoxMain/SubQuest"));
		m_pxSubQuestBtn^.m_xOnChange=Update;
		m_pxSubQuestBtn^.SetTabStop(true);

		m_pxNameEdit=cast<CEdit>(GetControl("GroupBoxMain/IDEdit"));
		m_pxNameEdit^.m_xOnChange=Update;
		m_pxNameEdit^.SetTabStop(true);
		
		m_pxGroupEdit=cast<CEdit>(GetControl("GroupBoxMain/GroupEdit"));
		m_pxGroupEdit^.m_xOnChange=Update;
		m_pxGroupEdit^.SetTabStop(true);

		m_pxHeadlineEdit=cast<CEdit>(GetControl("GroupBoxMain/HeadlineEdit"));
		m_pxHeadlineEdit^.m_xOnChange=Update;
		m_pxHeadlineEdit^.SetTabStop(true);

		m_pxQuestgroupEdit=cast<CEdit>(GetControl("GroupBoxMain/QuestgroupEdit"));
		m_pxQuestgroupEdit^.m_xOnChange=Update;
		m_pxQuestgroupEdit^.SetTabStop(true);

		m_pxDescriptionEdit=cast<CEdit>(GetControl("GroupBoxMain/DescriptionEdit"));
		m_pxDescriptionEdit^.m_xOnChange=Update;
		m_pxDescriptionEdit^.SetTabStop(true);

		m_pxAdditionalInfoEdit=cast<CEdit>(GetControl("GroupBoxMain/AdditionalInfoEdit"));
		m_pxAdditionalInfoEdit^.m_xOnChange=Update;
		m_pxAdditionalInfoEdit^.SetTabStop(true);

		m_pxQuestList=cast<CList>(GetControl("QuestList"));
		m_pxQuestList^.m_xOnSelect=OnSelectQuest;
		m_pxQuestList^.SetTabStop(true);

		m_pxNewQuest=cast<CButton>(GetControl("NewQuest"));
		m_pxNewQuest^.m_xOnClick=OnNewQuest;
		m_pxNewQuest^.SetTabStop(true);

		m_pxDeleteQuest=cast<CButton>(GetControl("DeleteQuest"));
		m_pxDeleteQuest^.m_xOnClick=OnDeleteQuest;
		m_pxDeleteQuest^.SetTabStop(true);

		m_pxImageButton=cast<CButton>(GetControl("GroupBoxMain/ImageButton"));
		m_pxImageButton^.m_xOnClick=OnChangeImage;
		m_pxImageButton^.SetDisabled(true);

		m_pxSortUp=cast<^CButton>(GetControl("Up"));
		m_pxSortUp^.SetDisabled(true);
		m_pxSortUp^.m_xOnClick=OnSortUp;
		m_pxSortDown=cast<^CButton>(GetControl("Down"));
		m_pxSortDown^.SetDisabled(true);
		m_pxSortDown^.m_xOnClick=OnSortDown;


		m_pxLock=cast<^CButton>(GetControl("Lock"));
		m_pxLock^.m_xOnClick=OnLock;

		OnLock();
		
		
		m_pxBoniGroup=cast<CGroupBox>(GetControl("GroupBoxMain/BoniGroup"));
		m_pxBoniValueEasy=cast<CSpinCtrlNumber>(m_pxBoniGroup^.GetControl("EasyValue"));
		m_pxBoniValueMiddle=cast<CSpinCtrlNumber>(m_pxBoniGroup^.GetControl("MiddleValue"));
		m_pxBoniValueHard=cast<CSpinCtrlNumber>(m_pxBoniGroup^.GetControl("HardValue"));
		m_pxBoniValueEasy^.m_xOnChange=Update;
		m_pxBoniValueMiddle^.m_xOnChange=Update;
		m_pxBoniValueHard^.m_xOnChange=Update;

		LoadPosition("QuestEditor");
	endconstructor;

	proc bool OnLock()
		m_bLocked = !m_bLocked;
		if(m_bLocked)then
			m_pxLock^.SetText("EDIT LOCKED!");
		else
			m_pxLock^.SetText("EDIT OK!");
		endif;
		return(true);
	endproc;

	proc bool OnChangeImage()
		return(true);
	endproc;

	proc bool OnNewQuest()
		var ^CQuestMgrClient pxQM=^(CClientWrap.GetClient().GetQuestMgr());
		var ^CQuestMgr.CQuest pxNewQuest=^(pxQM^.NewQuestRef());
		pxNewQuest^.SetName("New Quest");		
		//pxNewQuest^.SetHeadline("New Quest Headline");
		//pxNewQuest^.SetDescription("New Quest Description");
		//pxNewQuest^.SetAdditionalInfo("Additional Info");
		pxNewQuest^.SetImageSelected(false);
		pxNewQuest^.SetImagePath("No image selected");		
		var int i=m_pxQuestList^.AddItem("New Quest",new CQuestData(pxNewQuest^.GetGuid()));
		m_pxQuestList^.Select(i);		
		return(true);
	endproc;

	proc bool OnDeleteQuest()
		m_pxDelQuest=new CViewDelQuest(this);
		CClientWrap.GetDesktop()^.AddChild(m_pxDelQuest);
		CWindowMgr.Get().BringWindowToTop(m_pxDelQuest,true);
		CWindowMgr.Get().SetModal(m_pxDelQuest);
		return(true);
	endproc;

	export proc bool DeleteQuest()
		var int iIndex=m_pxQuestList^.GetSelectedItem();
		if(iIndex!=(-1))then			
			var ^CQuestData pxTmp=cast<CQuestData>(m_pxQuestList^.GetItemData(iIndex));
			if(pxTmp==null)then return true; endif;
			var CGuid xQuestGuid=pxTmp^.GetGuid();
			delete pxTmp;
			m_pxQuestList^.DeleteItem(iIndex);
			if(m_pxQuestList^.NumItems()>0)then
				m_pxQuestList^.Select(0);
			endif;
			var ^CQuestMgrClient pxQM=^(CClientWrap.GetClient().GetQuestMgr());
			pxQM^.DeleteQuest(xQuestGuid);
		endif;		
		return(true);
	endproc;

	proc bool OnSelectQuest()
		var int iIndex=m_pxQuestList^.GetSelectedItem();
		if(iIndex!=-1)then
			m_iLastQuest = iIndex;
			m_pxMainQuestBtn^.m_xOnChange.Clear();
			m_pxSubQuestBtn^.m_xOnChange.Clear();
			m_pxNameEdit^.m_xOnChange.Clear();
			m_pxGroupEdit^.m_xOnChange.Clear();
			m_pxHeadlineEdit^.m_xOnChange.Clear();
			m_pxDescriptionEdit^.m_xOnChange.Clear();
			m_pxAdditionalInfoEdit^.m_xOnChange.Clear();
			m_pxBoniValueEasy^.m_xOnChange.Clear();
			m_pxBoniValueMiddle^.m_xOnChange.Clear();
			m_pxBoniValueHard^.m_xOnChange.Clear();
						
			
			var ^CQuestData pxTmp=cast<CQuestData>(m_pxQuestList^.GetItemData(iIndex));
			var CGuid xQuestGuid=pxTmp^.GetGuid();
			var ^CQuestMgrClient pxQM=^(CClientWrap.GetClient().GetQuestMgr());
			var ^CQuestMgr.CQuest pxQuest=pxQM^.GetQuest(xQuestGuid);
			if(pxQuest==null)then
				return true;
			endif;			
			if(pxQuest^.IsMainQuest())then
				m_pxMainQuestBtn^.SetSelected(true);
			else
				m_pxSubQuestBtn^.SetSelected(true);
			endif;
			m_pxGroupEdit^.SetDisabled(!pxQuest^.IsMainQuest());
			
			m_pxMainQuestBtn^.SetSelected(pxQuest^.IsMainQuest());
			var string sName=pxQuest^.GetName();
			m_pxNameEdit^.SetText(sName);
			
			var string sGroup=pxQuest^.GetGroup();
			m_pxGroupEdit^.SetText(sGroup);
			
						
			var string sQuestHeadLoca="_"+sName+"_Headline";
			var string sQuestHead=CLocalizer.Get().Translate(sQuestHeadLoca);
			if(sQuestHead==sQuestHeadLoca) then				
				sQuestHead=pxQuest^.GetHeadline();
				m_pxHeadlineEdit^.SetDisabled(false);
			else
				m_pxHeadlineEdit^.SetDisabled(true);
			endif;
			var string sQuestGroupLoca="_"+sGroup;
			var string sQuestGroup=CLocalizer.Get().Translate(sQuestGroupLoca);
			if(sQuestGroup==sQuestGroupLoca) then				
				sQuestGroup=pxQuest^.GetGroup();
				m_pxQuestgroupEdit^.SetDisabled(false);
			else
				m_pxQuestgroupEdit^.SetDisabled(true);
			endif;
			if(!pxQuest^.IsMainQuest())then
				sQuestGroup = CLocalizer.Get().Translate("_SubQuestGroup");
				m_pxQuestgroupEdit^.SetDisabled(true);
			endif;
			var string sQuestDescLoca="_"+sName+"_Description";
			var string sQuestDesc=CLocalizer.Get().Translate(sQuestDescLoca);
			if(sQuestDesc==sQuestDescLoca) then				
				sQuestDesc=pxQuest^.GetDescription();
				m_pxDescriptionEdit^.SetDisabled(false);
			else
				m_pxDescriptionEdit^.SetDisabled(true);
			endif;
			var string sQuestAddInfoLoca="_"+sName+"_AdditionalInfo";
			var string sQuestAddInfo=CLocalizer.Get().Translate(sQuestAddInfoLoca);
			if(sQuestAddInfo==sQuestAddInfoLoca) then				
				sQuestAddInfo=pxQuest^.GetAdditionalInfo();
				m_pxAdditionalInfoEdit^.SetDisabled(false);
			else
				m_pxAdditionalInfoEdit^.SetDisabled(true);
			endif;
			
			m_pxHeadlineEdit^.SetText(sQuestHead);
			m_pxQuestgroupEdit^.SetText(sQuestGroup);
			m_pxDescriptionEdit^.SetText(sQuestDesc);
			m_pxAdditionalInfoEdit^.SetText(sQuestAddInfo);
			m_pxBoniValueEasy^.SetValue(pxQuest^.GetBoniEasy());
			m_pxBoniValueMiddle^.SetValue(pxQuest^.GetBoniMiddle());
			m_pxBoniValueHard^.SetValue(pxQuest^.GetBoniHard());
			
			
			m_pxImageButton^.SetText(pxQuest^.GetImagePath());

			m_pxMainQuestBtn^.m_xOnChange=Update;
			m_pxSubQuestBtn^.m_xOnChange=Update;
			m_pxNameEdit^.m_xOnChange=Update;
			m_pxGroupEdit^.m_xOnChange=Update;
			m_pxQuestgroupEdit^.m_xOnChange=Update;
			m_pxHeadlineEdit^.m_xOnChange=Update;
			m_pxDescriptionEdit^.m_xOnChange=Update;
			m_pxAdditionalInfoEdit^.m_xOnChange=Update;
			m_pxBoniValueEasy^.m_xOnChange=Update;
			m_pxBoniValueMiddle^.m_xOnChange=Update;
			m_pxBoniValueHard^.m_xOnChange=Update;

			UpdateSortButtons();

		endif;
		return(true);
	endproc;

	proc void UpdateSortButtons()
		var int iIndex=m_pxQuestList^.GetSelectedItem();
		m_pxSortUp^.SetDisabled(false);
		m_pxSortDown^.SetDisabled(false);
		if(iIndex<=0)then
			m_pxSortUp^.SetDisabled(true);
		endif;
		if(iIndex>=m_pxQuestList^.NumItems()-1)then
			m_pxSortDown^.SetDisabled(true);
		endif;
	endproc;

	proc bool Update()
		var int iIndex=m_pxQuestList^.GetSelectedItem();
		if(iIndex!=-1 && !m_bLocked)then
			//if(m_iLastQuest == -1 || m_iLastQuest != iIndex)then
			//	return true;
			//endif;
			var ^CQuestData pxTmp=cast<CQuestData>(m_pxQuestList^.GetItemData(iIndex));			
			var CGuid xQuestGuid=pxTmp^.GetGuid();
			var ^CQuestMgrClient pxQM=^(CClientWrap.GetClient().GetQuestMgr());
			var ^CQuestMgr.CQuest pxQuest=pxQM^.GetQuest(xQuestGuid);
			if(pxQuest==null)then
				return true;
			endif;			
			
			
			m_pxQuestList^.SetItemText(iIndex, m_pxNameEdit^.GetText());
			pxQuest^.SetMainQuest(!m_pxSubQuestBtn^.GetSelected());
			pxQuest^.SetName(m_pxNameEdit^.GetText());			
			if(!pxQuest^.IsMainQuest())then
				m_pxGroupEdit^.SetText("");
			endif;
			pxQuest^.SetGroup(m_pxGroupEdit^.GetText());
			//pxQuest^.SetHeadline(m_pxHeadlineEdit^.GetText());
			///pxQuest^.SetDescription(m_pxDescriptionEdit^.GetText());
			//pxQuest^.SetAdditionalInfo(m_pxAdditionalInfoEdit^.GetText());
			pxQuest^.SetBoniEasy(m_pxBoniValueEasy^.GetValueInt());
			pxQuest^.SetBoniMiddle(m_pxBoniValueMiddle^.GetValueInt());
			pxQuest^.SetBoniHard(m_pxBoniValueHard^.GetValueInt());			
			m_pxGroupEdit^.SetDisabled(!pxQuest^.IsMainQuest());
		endif;
		return(true);
	endproc;
	proc bool Dummy();
		return false;
	endproc;

	proc void OnUpdateContent()
		m_pxMainQuestBtn^.m_xOnChange=Dummy;
		m_pxSubQuestBtn^.m_xOnChange=Dummy;
		m_pxNameEdit^.m_xOnChange=Dummy;
		m_pxGroupEdit^.m_xOnChange=Dummy;
		m_pxHeadlineEdit^.m_xOnChange=Dummy;
		m_pxQuestgroupEdit^.m_xOnChange=Dummy;
		m_pxDescriptionEdit^.m_xOnChange=Dummy;
		m_pxAdditionalInfoEdit^.m_xOnChange=Dummy;
		m_pxQuestList^.m_xOnSelect=Dummy;
		m_pxImageButton^.m_xOnClick=Dummy;
		m_pxBoniValueEasy^.m_xOnChange=Dummy;
		m_pxBoniValueMiddle^.m_xOnChange=Dummy;
		m_pxBoniValueHard^.m_xOnChange=Dummy;

		
		m_pxQuestList^.Clear();
		var ^CQuestMgrClient pxQM=^(CClientWrap.GetClient().GetQuestMgr());
		var int i,iC=pxQM^.NumQuests();
		for(i=0)cond(i<iC)iter(i++)do
			var ^CQuestMgr.CQuest pxWalk=^(pxQM^.GetQuest(i));
			m_pxQuestList^.AddItem(pxWalk^.GetName(),new CQuestData(pxWalk^.GetGuid()));			
		endfor;
		if(iC>0)then
			m_pxQuestList^.Select(0);
		endif;
		
		m_pxQuestList^.SetDisabled(false);
		m_pxNewQuest^.SetDisabled(false);
		m_pxDeleteQuest^.SetDisabled(false);
		var ^CGroupBox	pxGroupBox=cast<CGroupBox>(GetControl("GroupBoxMain"));
		pxGroupBox^.SetDisabled(false);

		m_pxMainQuestBtn^.m_xOnChange=Update;
		m_pxSubQuestBtn^.m_xOnChange=Update;
		m_pxNameEdit^.m_xOnChange=Update;
		m_pxGroupEdit^.m_xOnChange=Update;
		m_pxHeadlineEdit^.m_xOnChange=Update;
		m_pxQuestgroupEdit^.m_xOnChange=Update;
		m_pxDescriptionEdit^.m_xOnChange=Update;
		m_pxAdditionalInfoEdit^.m_xOnChange=Update;
		m_pxBoniValueEasy^.m_xOnChange=Update;
		m_pxBoniValueMiddle^.m_xOnChange=Update;
		m_pxBoniValueHard^.m_xOnChange=Update;
		m_pxQuestList^.m_xOnSelect=OnSelectQuest;
		m_pxImageButton^.m_xOnClick=OnChangeImage;		
	endproc;

	export proc bool ResetControls()
		m_pxQuestList^.Clear();
		m_pxMainQuestBtn^.SetSelected(true);
		m_pxSubQuestBtn^.SetSelected(false);
		m_pxNameEdit^.SetText("");
		m_pxGroupEdit^.SetText("");
		m_pxHeadlineEdit^.SetText("");
		m_pxQuestgroupEdit^.SetText("");
		m_pxDescriptionEdit^.SetText("");
		m_pxAdditionalInfoEdit^.SetText("");
		m_pxBoniValueEasy^.SetValue(0);
		m_pxBoniValueMiddle^.SetValue(0);
		m_pxBoniValueHard^.SetValue(0);
		m_pxImageButton^.SetText("No image selected");
		m_pxQuestList^.SetDisabled(false);
		var ^CGroupBox	pxGroupBox=cast<CGroupBox>(GetControl("GroupBoxMain"));
		pxGroupBox^.SetDisabled(false);
		m_pxNewQuest^.SetDisabled(false);
		m_pxDeleteQuest^.SetDisabled(false);
		return(true);
	endproc;

	proc bool OnSortUp()	
		var int iIndex=m_pxQuestList^.GetSelectedItem();
		if(iIndex>0)then
			var ^CQuestData pxFirst=cast<CQuestData>(m_pxQuestList^.GetItemData(iIndex));
			var CGuid xFirst=pxFirst^.GetGuid();
			var ^CQuestData pxSecond=cast<CQuestData>(m_pxQuestList^.GetItemData(iIndex-1));
			var CGuid xSecond=pxSecond^.GetGuid();
			var ^CQuestMgrClient pxQM=^(CClientWrap.GetClient().GetQuestMgr());
			pxQM^.Swap(xFirst,xSecond);
			OnUpdateContent();
			m_pxQuestList^.Select(iIndex-1);
			UpdateSortButtons();
		endif;		
		return true;
	endproc;

	proc bool OnSortDown()
		var int iIndex=m_pxQuestList^.GetSelectedItem();
		if(iIndex<m_pxQuestList^.NumItems()-1)then
			var ^CQuestData pxFirst=cast<CQuestData>(m_pxQuestList^.GetItemData(iIndex));
			var CGuid xFirst=pxFirst^.GetGuid();
			var ^CQuestData pxSecond=cast<CQuestData>(m_pxQuestList^.GetItemData(iIndex+1));
			var CGuid xSecond=pxSecond^.GetGuid();
			var ^CQuestMgrClient pxQM=^(CClientWrap.GetClient().GetQuestMgr());
			pxQM^.Swap(xFirst,xSecond);
			OnUpdateContent();
			m_pxQuestList^.Select(iIndex+1);
			UpdateSortButtons();
		endif;
		return true;
	endproc;

endclass;

//Questdata, contains only PropDB for quest data
class CQuestData inherit CItemData
	
	var CGuid m_xQuestGuid;
	
	export constructor(CGuid p_xQuestGuid)
		m_xQuestGuid=p_xQuestGuid;
	endconstructor;

	export destructor()
	enddestructor;

	export proc CGuid GetGuid()
		return m_xQuestGuid;
	endproc;	
endclass;

//Confirmation window for quest deletion.
class CViewDelQuest inherit CEnhancedFrameWindow;

	var ^CViewQuestEditor	m_pxQuestEditor;

	export constructor(^CViewQuestEditor p_pxQuestEditor)
		if(!InitFromResource("options/ViewQuestEditor","DeleteQuest")) then
			CLevelEditorWrap.LogError("UI.QuestEditor","InitFromResource failed");
			return;
		endif;

		m_pxQuestEditor=p_pxQuestEditor;

		var ^CButton pxOkButton = cast<CButton>(GetControl("OkButton"));
		pxOkButton^.m_xOnClick=OnOk;

		var ^CButton pxCancelButton = cast<CButton>(GetControl("CancelButton"));
		pxCancelButton^.m_xOnClick=OnCancel;

		SetPos((CClientWrap.GetDesktop()^.GetSize().GetX()/2)-GetSize().GetX()/2,(CClientWrap.GetDesktop()^.GetSize().GetY()/2)-GetSize().GetY()/2);

	endconstructor;

	proc bool OnOk()
		m_pxQuestEditor^.DeleteQuest();
		Destroy();
		return(true);
	endproc;

	proc bool OnCancel()
		Destroy();
		return(true);
	endproc;

endclass;